import re

finder = r"#define ((?:(?:KEY)|(?:BTN)|(?:ABS))_(?!(?:RESERVED)|(?:MAX)|(?:CNT)|(?:MIN_INTERESTING))[^\s]+)"

header = """// this code was generated by gen.py
// do not modify by hand

#ifndef NAMES_H
#define NAMES_H

#include <linux/uinput.h>

typedef struct {
	char *name;
	int code;
} macro;

macro macros[] = {"""

footer = """};

#endif"""

with open("/usr/include/linux/input-event-codes.h") as fp:
    ex = re.compile(finder)
    key_names = ["EV_KEY", "EV_ABS"]
    for line in fp:
        m = ex.match(line)
        if m: key_names.append(m.group(1))
    key_names.sort() # bsearch is used on macros, so it must be sorted

    print(header)
    for name in key_names:
        print(f"\t{{ \"{name}\", {name} }},")
    print(footer)
